apiVersion: template.openshift.io/v1
kind: Template
labels:
  app: loki
  template: loki-template
metadata:
  name: loki
  namespace: openshift
objects:

- apiVersion: v1
  kind: ServiceAccount
  metadata:
    name: loki
    namespace: ${GRAFANA_PROJECT_NAME}
    labels:
      app: loki
      group: grafana

# - apiVersion: v1
#   kind: Service
#   metadata:
#     name: loki
#     namespace: ${GRAFANA_PROJECT_NAME}
#     labels:
#       app: loki
#       group: grafana
#   spec:
#     type: ClusterIP
#     ports:
#       - port: 3100
#         targetPort: 3100
#         protocol: TCP
#     selector:
#       app: loki
#       group: grafana

# - apiVersion: v1
#   kind: Service
#   metadata:
#     name: loki
#     namespace: ${GRAFANA_PROJECT_NAME}
#     labels:
#       app: loki
#       group: grafana
#   spec:
#     ports:
#     - name: loki
#       port: 3100
#       protocol: TCP
#       targetPort: 3100
#     selector:
#       app: loki

- apiVersion: v1
  kind: Service
  metadata:
    name: loki
    namespace: ${GRAFANA_PROJECT_NAME}
    labels:
      app: loki
      group: grafana
  spec:
    type: NodePort
    ports:
      - port: 3100
        targetPort: 3100
        protocol: TCP
    selector:
      app: loki
      group: grafana

- apiVersion: apps/v1beta2
  kind: Deployment
# - apiVersion: apps.openshift.io/v1
#   kind: DeploymentConfig
  metadata:
    name: loki
    namespace: ${GRAFANA_PROJECT_NAME}
    labels:
      app: loki
      group: grafana
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: loki
        group: grafana
    template:
      metadata:
        labels:
          app: loki
          group: grafana
      spec:
        serviceAccountName: loki
        containers:
          - name: loki
            image: grafana/loki:latest
            imagePullPolicy: Always
            args: ['-config.file=/etc/loki/loki-config.yaml']
            # ports:
            #   - name: loki-http
            #     containerPort: 3100
            resources:
              requests:
                memory: "64Mi"
                cpu: "10m"
              limits:
                memory: "128Mi"
                cpu: "500m"
            volumeMounts:
            - name: loki-config
              mountPath: /etc/loki/
            - name: loki-index
              mountPath: /home/loki
        volumes:
          - name: loki-config
            configMap:
              name: loki-config
          - name: loki-index
            emptyDir:
              medium: ""
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        serviceAccountName: loki
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30

- apiVersion: v1
  kind: ConfigMap
  metadata:
    name: loki-config
    namespace: ${GRAFANA_PROJECT_NAME}
  data:
    loki-config.yaml: |-
  
      auth_enabled: false
    
      server:
        http_listen_port: 3100
      
      ingester:
        lifecycler:
          address: 127.0.0.1
          ring:
            kvstore:
              store: inmemory
            replication_factor: 1
          final_sleep: 0s
        chunk_idle_period: 5m
        chunk_retain_period: 30s
      
      schema_config:
        configs:
        - from: 2018-04-15
          store: boltdb
          object_store: filesystem
          schema: v11
          index:
            prefix: index_
            period: 168h
      
      storage_config:
        boltdb:
          directory: /home/loki/index
      
        filesystem:
          directory: /home/loki/chunks
      
      limits_config:
        enforce_metric_name: false
        reject_old_samples: true
        reject_old_samples_max_age: 168h
      
      chunk_store_config:
        max_look_back_period: 840h
      
      table_manager:
        chunk_tables_provisioning:
          inactive_read_throughput: 0
          inactive_write_throughput: 0
          provisioned_read_throughput: 0
          provisioned_write_throughput: 0
        index_tables_provisioning:
          inactive_read_throughput: 0
          inactive_write_throughput: 0
          provisioned_read_throughput: 0
          provisioned_write_throughput: 0
        retention_deletes_enabled: true
        retention_period: 840h

#Variables
parameters:
- description: Project (Namespace)
  displayName: Project (Namespace)
  name: GRAFANA_PROJECT_NAME
  # value: "loki-grafana"

- description: Storage type
  displayName: Starage
  name: STORAGE_ACCSESS_MODE
  value: "ReadWriteOnce"

- description: Storage size.
  displayName: Storage size
  name: PVC_STORAGE_SIZE
  value: "10Gi"